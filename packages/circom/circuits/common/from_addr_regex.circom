pragma circom 2.1.5;

include "zk-regex-circom/circuits/regex_helpers.circom";

template FromAddrRegex(msg_bytes) {
	signal input msg[msg_bytes];
	signal output out;

	var num_bytes = msg_bytes+1;
	signal in[num_bytes];
	in[0]<==128;
	for (var i = 0; i < msg_bytes; i++) {
		in[i+1] <== msg[i];
	}

	component eq[38][num_bytes];
	component lt[36][num_bytes];
	component and[40][num_bytes];
	component multi_or[13][num_bytes];
	signal states[num_bytes+1][16];
	component state_changed[num_bytes];

	states[0][0] <== 1;
	for (var i = 1; i < 16; i++) {
		states[0][i] <== 0;
	}

	for (var i = 0; i < num_bytes; i++) {
		state_changed[i] = MultiOR(15);
		lt[0][i] = LessThan(8);
		lt[0][i].in[0] <== 47;
		lt[0][i].in[1] <== in[i];
		lt[1][i] = LessThan(8);
		lt[1][i].in[0] <== in[i];
		lt[1][i].in[1] <== 58;
		and[0][i] = AND();
		and[0][i].a <== lt[0][i].out;
		and[0][i].b <== lt[1][i].out;
		lt[2][i] = LessThan(8);
		lt[2][i].in[0] <== 64;
		lt[2][i].in[1] <== in[i];
		lt[3][i] = LessThan(8);
		lt[3][i].in[0] <== in[i];
		lt[3][i].in[1] <== 91;
		and[1][i] = AND();
		and[1][i].a <== lt[2][i].out;
		and[1][i].b <== lt[3][i].out;
		lt[4][i] = LessThan(8);
		lt[4][i].in[0] <== 96;
		lt[4][i].in[1] <== in[i];
		lt[5][i] = LessThan(8);
		lt[5][i].in[0] <== in[i];
		lt[5][i].in[1] <== 123;
		and[2][i] = AND();
		and[2][i].a <== lt[4][i].out;
		and[2][i].b <== lt[5][i].out;
		eq[0][i] = IsEqual();
		eq[0][i].in[0] <== in[i];
		eq[0][i].in[1] <== 45;
		eq[1][i] = IsEqual();
		eq[1][i].in[0] <== in[i];
		eq[1][i].in[1] <== 46;
		eq[2][i] = IsEqual();
		eq[2][i].in[0] <== in[i];
		eq[2][i].in[1] <== 95;
		and[3][i] = AND();
		and[3][i].a <== states[i][1];
		multi_or[0][i] = MultiOR(6);
		multi_or[0][i].in[0] <== and[0][i].out;
		multi_or[0][i].in[1] <== and[1][i].out;
		multi_or[0][i].in[2] <== and[2][i].out;
		multi_or[0][i].in[3] <== eq[0][i].out;
		multi_or[0][i].in[4] <== eq[1][i].out;
		multi_or[0][i].in[5] <== eq[2][i].out;
		and[3][i].b <== multi_or[0][i].out;
		lt[6][i] = LessThan(8);
		lt[6][i].in[0] <== 47;
		lt[6][i].in[1] <== in[i];
		lt[7][i] = LessThan(8);
		lt[7][i].in[0] <== in[i];
		lt[7][i].in[1] <== 58;
		and[4][i] = AND();
		and[4][i].a <== lt[6][i].out;
		and[4][i].b <== lt[7][i].out;
		lt[8][i] = LessThan(8);
		lt[8][i].in[0] <== 64;
		lt[8][i].in[1] <== in[i];
		lt[9][i] = LessThan(8);
		lt[9][i].in[0] <== in[i];
		lt[9][i].in[1] <== 91;
		and[5][i] = AND();
		and[5][i].a <== lt[8][i].out;
		and[5][i].b <== lt[9][i].out;
		lt[10][i] = LessThan(8);
		lt[10][i].in[0] <== 96;
		lt[10][i].in[1] <== in[i];
		lt[11][i] = LessThan(8);
		lt[11][i].in[0] <== in[i];
		lt[11][i].in[1] <== 123;
		and[6][i] = AND();
		and[6][i].a <== lt[10][i].out;
		and[6][i].b <== lt[11][i].out;
		eq[3][i] = IsEqual();
		eq[3][i].in[0] <== in[i];
		eq[3][i].in[1] <== 45;
		eq[4][i] = IsEqual();
		eq[4][i].in[0] <== in[i];
		eq[4][i].in[1] <== 46;
		eq[5][i] = IsEqual();
		eq[5][i].in[0] <== in[i];
		eq[5][i].in[1] <== 95;
		and[7][i] = AND();
		and[7][i].a <== states[i][5];
		multi_or[1][i] = MultiOR(6);
		multi_or[1][i].in[0] <== and[4][i].out;
		multi_or[1][i].in[1] <== and[5][i].out;
		multi_or[1][i].in[2] <== and[6][i].out;
		multi_or[1][i].in[3] <== eq[3][i].out;
		multi_or[1][i].in[4] <== eq[4][i].out;
		multi_or[1][i].in[5] <== eq[5][i].out;
		and[7][i].b <== multi_or[1][i].out;
		lt[12][i] = LessThan(8);
		lt[12][i].in[0] <== 47;
		lt[12][i].in[1] <== in[i];
		lt[13][i] = LessThan(8);
		lt[13][i].in[0] <== in[i];
		lt[13][i].in[1] <== 58;
		and[8][i] = AND();
		and[8][i].a <== lt[12][i].out;
		and[8][i].b <== lt[13][i].out;
		lt[14][i] = LessThan(8);
		lt[14][i].in[0] <== 64;
		lt[14][i].in[1] <== in[i];
		lt[15][i] = LessThan(8);
		lt[15][i].in[0] <== in[i];
		lt[15][i].in[1] <== 91;
		and[9][i] = AND();
		and[9][i].a <== lt[14][i].out;
		and[9][i].b <== lt[15][i].out;
		lt[16][i] = LessThan(8);
		lt[16][i].in[0] <== 96;
		lt[16][i].in[1] <== in[i];
		lt[17][i] = LessThan(8);
		lt[17][i].in[0] <== in[i];
		lt[17][i].in[1] <== 123;
		and[10][i] = AND();
		and[10][i].a <== lt[16][i].out;
		and[10][i].b <== lt[17][i].out;
		eq[6][i] = IsEqual();
		eq[6][i].in[0] <== in[i];
		eq[6][i].in[1] <== 45;
		eq[7][i] = IsEqual();
		eq[7][i].in[0] <== in[i];
		eq[7][i].in[1] <== 46;
		eq[8][i] = IsEqual();
		eq[8][i].in[0] <== in[i];
		eq[8][i].in[1] <== 95;
		and[11][i] = AND();
		and[11][i].a <== states[i][14];
		multi_or[2][i] = MultiOR(6);
		multi_or[2][i].in[0] <== and[8][i].out;
		multi_or[2][i].in[1] <== and[9][i].out;
		multi_or[2][i].in[2] <== and[10][i].out;
		multi_or[2][i].in[3] <== eq[6][i].out;
		multi_or[2][i].in[4] <== eq[7][i].out;
		multi_or[2][i].in[5] <== eq[8][i].out;
		and[11][i].b <== multi_or[2][i].out;
		multi_or[3][i] = MultiOR(3);
		multi_or[3][i].in[0] <== and[3][i].out;
		multi_or[3][i].in[1] <== and[7][i].out;
		multi_or[3][i].in[2] <== and[11][i].out;
		states[i+1][1] <== multi_or[3][i].out;
		state_changed[i].in[0] <== states[i+1][1];
		log("i: ",i, "in[i]: ",in[i], "states[i+1][1]", states[i+1][1]);
		eq[9][i] = IsEqual();
		eq[9][i].in[0] <== in[i];
		eq[9][i].in[1] <== 13;
		and[12][i] = AND();
		and[12][i].a <== states[i][0];
		and[12][i].b <== eq[9][i].out;
		eq[10][i] = IsEqual();
		eq[10][i].in[0] <== in[i];
		eq[10][i].in[1] <== 13;
		and[13][i] = AND();
		and[13][i].a <== states[i][4];
		and[13][i].b <== eq[10][i].out;
		multi_or[4][i] = MultiOR(2);
		multi_or[4][i].in[0] <== and[12][i].out;
		multi_or[4][i].in[1] <== and[13][i].out;
		states[i+1][2] <== multi_or[4][i].out;
		state_changed[i].in[1] <== states[i+1][2];
		eq[11][i] = IsEqual();
		eq[11][i].in[0] <== in[i];
		eq[11][i].in[1] <== 10;
		eq[12][i] = IsEqual();
		eq[12][i].in[0] <== in[i];
		eq[12][i].in[1] <== 13;
		eq[13][i] = IsEqual();
		eq[13][i].in[0] <== in[i];
		eq[13][i].in[1] <== 60;
		and[14][i] = AND();
		and[14][i].a <== states[i][3];
		multi_or[5][i] = MultiOR(3);
		multi_or[5][i].in[0] <== eq[11][i].out;
		multi_or[5][i].in[1] <== eq[12][i].out;
		multi_or[5][i].in[2] <== eq[13][i].out;
		and[14][i].b <== 1 - multi_or[5][i].out;
		lt[18][i] = LessThan(8);
		lt[18][i].in[0] <== 47;
		lt[18][i].in[1] <== in[i];
		lt[19][i] = LessThan(8);
		lt[19][i].in[0] <== in[i];
		lt[19][i].in[1] <== 58;
		and[15][i] = AND();
		and[15][i].a <== lt[18][i].out;
		and[15][i].b <== lt[19][i].out;
		lt[20][i] = LessThan(8);
		lt[20][i].in[0] <== 64;
		lt[20][i].in[1] <== in[i];
		lt[21][i] = LessThan(8);
		lt[21][i].in[0] <== in[i];
		lt[21][i].in[1] <== 91;
		and[16][i] = AND();
		and[16][i].a <== lt[20][i].out;
		and[16][i].b <== lt[21][i].out;
		lt[22][i] = LessThan(8);
		lt[22][i].in[0] <== 96;
		lt[22][i].in[1] <== in[i];
		lt[23][i] = LessThan(8);
		lt[23][i].in[0] <== in[i];
		lt[23][i].in[1] <== 123;
		and[17][i] = AND();
		and[17][i].a <== lt[22][i].out;
		and[17][i].b <== lt[23][i].out;
		eq[14][i] = IsEqual();
		eq[14][i].in[0] <== in[i];
		eq[14][i].in[1] <== 10;
		eq[15][i] = IsEqual();
		eq[15][i].in[0] <== in[i];
		eq[15][i].in[1] <== 13;
		eq[16][i] = IsEqual();
		eq[16][i].in[0] <== in[i];
		eq[16][i].in[1] <== 45;
		eq[17][i] = IsEqual();
		eq[17][i].in[0] <== in[i];
		eq[17][i].in[1] <== 46;
		eq[18][i] = IsEqual();
		eq[18][i].in[0] <== in[i];
		eq[18][i].in[1] <== 95;
		and[18][i] = AND();
		and[18][i].a <== states[i][14];
		multi_or[6][i] = MultiOR(8);
		multi_or[6][i].in[0] <== and[15][i].out;
		multi_or[6][i].in[1] <== and[16][i].out;
		multi_or[6][i].in[2] <== and[17][i].out;
		multi_or[6][i].in[3] <== eq[14][i].out;
		multi_or[6][i].in[4] <== eq[15][i].out;
		multi_or[6][i].in[5] <== eq[16][i].out;
		multi_or[6][i].in[6] <== eq[17][i].out;
		multi_or[6][i].in[7] <== eq[18][i].out;
		and[18][i].b <== 1 - multi_or[6][i].out;
		multi_or[7][i] = MultiOR(2);
		multi_or[7][i].in[0] <== and[14][i].out;
		multi_or[7][i].in[1] <== and[18][i].out;
		states[i+1][3] <== multi_or[7][i].out;
		log("i: ",i, "in[i]: ",in[i], "states[i+1][3]", states[i+1][3]);
		state_changed[i].in[2] <== states[i+1][3];
		eq[19][i] = IsEqual();
		eq[19][i].in[0] <== in[i];
		eq[19][i].in[1] <== 128;
		and[19][i] = AND();
		and[19][i].a <== states[i][0];
		and[19][i].b <== eq[19][i].out;
		eq[20][i] = IsEqual();
		eq[20][i].in[0] <== in[i];
		eq[20][i].in[1] <== 10;
		and[20][i] = AND();
		and[20][i].a <== states[i][2];
		and[20][i].b <== eq[20][i].out;
		multi_or[8][i] = MultiOR(2);
		multi_or[8][i].in[0] <== and[19][i].out;
		multi_or[8][i].in[1] <== and[20][i].out;
		states[i+1][4] <== multi_or[8][i].out;
		state_changed[i].in[3] <== states[i+1][4];
		eq[21][i] = IsEqual();
		eq[21][i].in[0] <== in[i];
		eq[21][i].in[1] <== 60;
		and[21][i] = AND();
		and[21][i].a <== states[i][3];
		and[21][i].b <== eq[21][i].out;
		states[i+1][5] <== and[21][i].out;
		log("i: ",i, "in[i]: ",in[i], "states[i+1][5]", states[i+1][5]);
		state_changed[i].in[4] <== states[i+1][5];
		eq[22][i] = IsEqual();
		eq[22][i].in[0] <== in[i];
		eq[22][i].in[1] <== 64;
		and[22][i] = AND();
		and[22][i].a <== states[i][1];
		and[22][i].b <== eq[22][i].out;
		states[i+1][6] <== and[22][i].out;
		state_changed[i].in[5] <== states[i+1][6];
		eq[23][i] = IsEqual();
		eq[23][i].in[0] <== in[i];
		eq[23][i].in[1] <== 102;
		and[23][i] = AND();
		and[23][i].a <== states[i][4];
		and[23][i].b <== eq[23][i].out;
		states[i+1][7] <== and[23][i].out;
		state_changed[i].in[6] <== states[i+1][7];
		lt[24][i] = LessThan(8);
		lt[24][i].in[0] <== 47;
		lt[24][i].in[1] <== in[i];
		lt[25][i] = LessThan(8);
		lt[25][i].in[0] <== in[i];
		lt[25][i].in[1] <== 58;
		and[24][i] = AND();
		and[24][i].a <== lt[24][i].out;
		and[24][i].b <== lt[25][i].out;
		lt[26][i] = LessThan(8);
		lt[26][i].in[0] <== 64;
		lt[26][i].in[1] <== in[i];
		lt[27][i] = LessThan(8);
		lt[27][i].in[0] <== in[i];
		lt[27][i].in[1] <== 91;
		and[25][i] = AND();
		and[25][i].a <== lt[26][i].out;
		and[25][i].b <== lt[27][i].out;
		lt[28][i] = LessThan(8);
		lt[28][i].in[0] <== 96;
		lt[28][i].in[1] <== in[i];
		lt[29][i] = LessThan(8);
		lt[29][i].in[0] <== in[i];
		lt[29][i].in[1] <== 123;
		and[26][i] = AND();
		and[26][i].a <== lt[28][i].out;
		and[26][i].b <== lt[29][i].out;
		eq[24][i] = IsEqual();
		eq[24][i].in[0] <== in[i];
		eq[24][i].in[1] <== 45;
		eq[25][i] = IsEqual();
		eq[25][i].in[0] <== in[i];
		eq[25][i].in[1] <== 46;
		eq[26][i] = IsEqual();
		eq[26][i].in[0] <== in[i];
		eq[26][i].in[1] <== 95;
		and[27][i] = AND();
		and[27][i].a <== states[i][6];
		multi_or[9][i] = MultiOR(6);
		multi_or[9][i].in[0] <== and[24][i].out;
		multi_or[9][i].in[1] <== and[25][i].out;
		multi_or[9][i].in[2] <== and[26][i].out;
		multi_or[9][i].in[3] <== eq[24][i].out;
		multi_or[9][i].in[4] <== eq[25][i].out;
		multi_or[9][i].in[5] <== eq[26][i].out;
		and[27][i].b <== multi_or[9][i].out;
		lt[30][i] = LessThan(8);
		lt[30][i].in[0] <== 47;
		lt[30][i].in[1] <== in[i];
		lt[31][i] = LessThan(8);
		lt[31][i].in[0] <== in[i];
		lt[31][i].in[1] <== 58;
		and[28][i] = AND();
		and[28][i].a <== lt[30][i].out;
		and[28][i].b <== lt[31][i].out;
		lt[32][i] = LessThan(8);
		lt[32][i].in[0] <== 64;
		lt[32][i].in[1] <== in[i];
		lt[33][i] = LessThan(8);
		lt[33][i].in[0] <== in[i];
		lt[33][i].in[1] <== 91;
		and[29][i] = AND();
		and[29][i].a <== lt[32][i].out;
		and[29][i].b <== lt[33][i].out;
		lt[34][i] = LessThan(8);
		lt[34][i].in[0] <== 96;
		lt[34][i].in[1] <== in[i];
		lt[35][i] = LessThan(8);
		lt[35][i].in[0] <== in[i];
		lt[35][i].in[1] <== 123;
		and[30][i] = AND();
		and[30][i].a <== lt[34][i].out;
		and[30][i].b <== lt[35][i].out;
		eq[27][i] = IsEqual();
		eq[27][i].in[0] <== in[i];
		eq[27][i].in[1] <== 45;
		eq[28][i] = IsEqual();
		eq[28][i].in[0] <== in[i];
		eq[28][i].in[1] <== 46;
		eq[29][i] = IsEqual();
		eq[29][i].in[0] <== in[i];
		eq[29][i].in[1] <== 95;
		and[31][i] = AND();
		and[31][i].a <== states[i][8];
		multi_or[10][i] = MultiOR(6);
		multi_or[10][i].in[0] <== and[28][i].out;
		multi_or[10][i].in[1] <== and[29][i].out;
		multi_or[10][i].in[2] <== and[30][i].out;
		multi_or[10][i].in[3] <== eq[27][i].out;
		multi_or[10][i].in[4] <== eq[28][i].out;
		multi_or[10][i].in[5] <== eq[29][i].out;
		and[31][i].b <== multi_or[10][i].out;
		multi_or[11][i] = MultiOR(2);
		multi_or[11][i].in[0] <== and[27][i].out;
		multi_or[11][i].in[1] <== and[31][i].out;
		states[i+1][8] <== multi_or[11][i].out;
		state_changed[i].in[7] <== states[i+1][8];
		eq[30][i] = IsEqual();
		eq[30][i].in[0] <== in[i];
		eq[30][i].in[1] <== 114;
		and[32][i] = AND();
		and[32][i].a <== states[i][7];
		and[32][i].b <== eq[30][i].out;
		states[i+1][9] <== and[32][i].out;
		state_changed[i].in[8] <== states[i+1][9];
		eq[31][i] = IsEqual();
		eq[31][i].in[0] <== in[i];
		eq[31][i].in[1] <== 111;
		and[33][i] = AND();
		and[33][i].a <== states[i][9];
		and[33][i].b <== eq[31][i].out;
		states[i+1][10] <== and[33][i].out;
		state_changed[i].in[9] <== states[i+1][10];
		eq[32][i] = IsEqual();
		eq[32][i].in[0] <== in[i];
		eq[32][i].in[1] <== 109;
		and[34][i] = AND();
		and[34][i].a <== states[i][10];
		and[34][i].b <== eq[32][i].out;
		states[i+1][11] <== and[34][i].out;
		state_changed[i].in[10] <== states[i+1][11];
		eq[33][i] = IsEqual();
		eq[33][i].in[0] <== in[i];
		eq[33][i].in[1] <== 13;
		and[35][i] = AND();
		and[35][i].a <== states[i][8];
		and[35][i].b <== eq[33][i].out;
		eq[34][i] = IsEqual();
		eq[34][i].in[0] <== in[i];
		eq[34][i].in[1] <== 13;
		and[36][i] = AND();
		and[36][i].a <== states[i][13];
		and[36][i].b <== eq[34][i].out;
		multi_or[12][i] = MultiOR(2);
		multi_or[12][i].in[0] <== and[35][i].out;
		multi_or[12][i].in[1] <== and[36][i].out;
		states[i+1][12] <== multi_or[12][i].out;
		state_changed[i].in[11] <== states[i+1][12];
		eq[35][i] = IsEqual();
		eq[35][i].in[0] <== in[i];
		eq[35][i].in[1] <== 62;
		and[37][i] = AND();
		and[37][i].a <== states[i][8];
		and[37][i].b <== eq[35][i].out;
		states[i+1][13] <== and[37][i].out;
		state_changed[i].in[12] <== states[i+1][13];
		eq[36][i] = IsEqual();
		eq[36][i].in[0] <== in[i];
		eq[36][i].in[1] <== 58;
		and[38][i] = AND();
		and[38][i].a <== states[i][11];
		and[38][i].b <== eq[36][i].out;
		states[i+1][14] <== and[38][i].out;
		state_changed[i].in[13] <== states[i+1][14];
		eq[37][i] = IsEqual();
		eq[37][i].in[0] <== in[i];
		eq[37][i].in[1] <== 10;
		and[39][i] = AND();
		and[39][i].a <== states[i][12];
		and[39][i].b <== eq[37][i].out;
		states[i+1][15] <== and[39][i].out;
		state_changed[i].in[14] <== states[i+1][15];
		states[i+1][0] <== 1 - state_changed[i].out;
	}

	component final_state_result = MultiOR(num_bytes+1);
	for (var i = 0; i <= num_bytes; i++) {
		final_state_result.in[i] <== states[i][15];
	}
	out <== final_state_result.out;

	signal is_consecutive[msg_bytes+1][2];
	is_consecutive[msg_bytes][1] <== 1;
	for (var i = 0; i < msg_bytes; i++) {
		is_consecutive[msg_bytes-1-i][0] <== states[num_bytes-i][15] * (1 - is_consecutive[msg_bytes-i][1]) + is_consecutive[msg_bytes-i][1];
		is_consecutive[msg_bytes-1-i][1] <== state_changed[msg_bytes-i].out * is_consecutive[msg_bytes-1-i][0];
	}
	signal is_substr0[msg_bytes][7];
	signal is_reveal0[msg_bytes];
	signal output reveal0[msg_bytes];
	for (var i = 0; i < msg_bytes; i++) {
		is_substr0[i][0] <== 0;
		is_substr0[i][1] <== is_substr0[i][0] + states[i+1][8] * states[i+2][8];
		is_substr0[i][2] <== is_substr0[i][1] + states[i+1][14] * states[i+2][1];
		is_substr0[i][3] <== is_substr0[i][2] + states[i+1][1] * states[i+2][6];
		is_substr0[i][4] <== is_substr0[i][3] + states[i+1][5] * states[i+2][1];
		is_substr0[i][5] <== is_substr0[i][4] + states[i+1][1] * states[i+2][1];
		is_substr0[i][6] <== is_substr0[i][5] + states[i+1][6] * states[i+2][8];
		is_reveal0[i] <== is_substr0[i][6] * is_consecutive[i][1];
		reveal0[i] <== in[i+1] * is_reveal0[i];
	}
}